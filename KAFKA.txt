PRODUCER -> Tipo de cliente de Kafka que se encarga de publicar los mensajes. Envía mensajes a los topics.

CONSUMER ->  Tipo de cliente de Kafka que se encarga de consumir los mensajes. Subscritos a topics.

GRUPO DE CONSUMIDORES : Agrupación de uno o más consumidores que trabajan para leer de un topic en base al cumplimiento de algún objetivo / funcionalidad concreta

KAFKA CLUSTER -> Conjunto de brokers y su balanceador (zookeeper).

BROKER -> Procesan los mensajes en base a la determinación de zookeeper. No tienen estado. Conjunto de topics.

ZOOKEEPER -> Administrador de brokers

TOPIC -> Divididos en particiones replicadas en todos los brokers. Canal de comunicación donde el mensaje hace su stream.




-------------------------------------------------------------------------------------------
Configuración account.query

 kafka:
     listener:
       ack-mode: MANUAL_IMMEDIATE
     consumer:
       bootstrap-servers: localhost:9092
       group-id: bankaccConsumer
       auto-offset-reset: earliest
       key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
       value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
       properties:
         spring:
           json:
             trusted:
               packages: '*'

---------------------------------------------------------------------------------------

Domain Driven Design (DDD)

Modelado de sofware que coincida con el dominio del negocio. Se enfoca en el core o kernel.
Llama a los problemas domain
Separa los problemas en Bounded Context(Área de problema independiente,traza limites entre problemas, cada bounded context tendra una solución que eventualmente es un microservicio).

----------------------------------------------------------------------------------------


